/*

! 웹의 동작 원리 소개
  : "클라이언트-서버 아키텍처" 이해

? 1. 클라이언트-서버 모델 개요

=== 클라이언트(Client) ===

정의: 사용자와 상호작용하는 장치 또는 애플리케이션
    >> 보통 웹 브라우저(예: Chrome, Firefox, Safari 등)를 의미
      
역할: 사용자가 입력한 명령을 서버로 보내고
      , 서버에서 받은 데이터를 사용자에게 표시

=== 서버(Server) ===

정의: 클라이언트의 요청을 처리하고 응답을 제공하는 장치 또는 애플리케이션
    >> 웹 서버, 데이터베이스 서버 등이 포함

역할: 클라이언트로부터 요청을 받아 이를 처리하고 결과를 반환

? 2. 클라이언트-서버 상호작용 예시

1) 사용자가 웹 브라우저에서 URL을 입력

- 브라우저가 URL을 통해 서버에 접속하기 위해 HTTP 요청을 준비

2) 클라이언트(브라우저)가 서버에 HTTP 요청 전송

- HTTP 요청은 클라이언트의 요구사항을 담고 있음
  (예: 특정 웹 페이지를 요청)

3) 서버가 요청을 처리하고, 결과(HTML, CSS, JS 등)를 클라이언트에 응답

- 서버는 요청받은 작업을 수행하고, 결과 데이터를 HTTP 응답으로 클라이언트에게 전달

4) 클라이언트는 응답 받은 데이터를 사용자에게 표시

- 클라이언트는 받은 데이터를 렌더링하여 사용자에게 보여줌

? 3. 클라이언트-서버 아키텍처의 장점
확장성: 서버는 동시에 여러 클라이언트의 요청을 처리 가능
유연성: 클라이언트와 서버는 서로 다른 플랫폼에서 동작 가능
보안성: 데이터는 중앙 서버에서 관리되고 제어
      클라이언트는 민감한 데이터를 직접 다루지 않음









*/