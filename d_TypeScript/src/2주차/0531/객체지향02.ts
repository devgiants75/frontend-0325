// 1. 상속과 다형성 (60분)
// 1.1 클래스 상속 (30분)
// 목표: 클래스 상속을 사용하여 코드 재사용성을 높이는 방법 학습
// 내용:
// 상속의 개념 및 문법
// 부모 클래스의 속성과 메서드 상속받기
// 실습: 직원 클래스를 상속받아 매니저 클래스 작성
// 1.2 메서드 오버라이딩과 다형성 (30분)
// 목표: 메서드 오버라이딩을 통해 다형적 행동 구현 방법 학습
// 내용:
// 오버라이딩의 개념과 필요성
// 다형성의 실제 사례 설명
// 실습: 다양한 직원 유형에 맞춰 getInfo 메서드 오버라이딩
// 2. 추상 클래스와 인터페이스 (60분)
// 2.1 추상 클래스의 구현 (30분)
// 목표: 추상 클래스를 사용하여 공통 기능을 정의하고 특정 기능을 강제하는 방법 학습
// 내용:
// 추상 클래스의 정의 및 사용법
// 추상 메서드의 정의
// 실습: 다양한 종류의 도형을 처리하는 추상 클래스 구현
// 2.2 인터페이스와 추상 클래스의 차이점 (30분)
// 목표: 추상 클래스와 인터페이스의 사용 시나리오와 차이점 이해
// 내용:
// 인터페이스와 추상 클래스의 용도 및 선택 기준
// 각각의 장단점 분석
// 실습: 동일한 기능을 인터페이스와 추상 클래스로 구현하여 비교
// 3. 디자인 패턴 소개 (60분)
// 3.1 싱글톤, 팩토리, 데코레이터 패턴 (60분)
// 목표: 객체지향 설계 패턴의 기초를 이해하고 각 패턴의 적용 방법 학습
// 내용:
// 싱글톤 패턴의 개념 및 구현
// 팩토리 패턴의 개념 및 사용 사례
// 데코레이터 패턴의 개념 및 적용 방법
// 실습: 각 패턴을 실제 코드 예제로 구현