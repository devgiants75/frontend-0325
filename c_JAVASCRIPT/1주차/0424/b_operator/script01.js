//! JS 연산자
// : 수학적 계산을 위한 코드

// - 산술 / 할당 / 비교 / 논리

//! 1. 산술 연산자
// : 사칙연산을 다루는 가장 기본적이면서도 많이 사용하는 연산자
// : 모두 두 개의 피연산자를 가지는 이항 연산자
// : 피연산자들의 결합 방향은 '왼쪽에서 오른쪽'

//& 연산자의 우선순위와 결합 방향
// 연산자의 우선순위는 수식 내에 여러 연산자가 함께 등장할 때
// , 어느 연산자가 먼저 처리될 것인가를 결정

// 우선순위가 빠른 연산자가 가장 먼저 실행
// , 같은 우선순위를 가지는 연산자가 둘 이상 있을 때에는 결합 순서에 따라 실행 순서가 결정
//& ---------------------------

//* 산술 연산자의 종류
// 덧셈(+), 뺄셈(-), 곱셈(*), 나눗셈(/)
// 나눗셈-나머지(%), 증가(++), 감소(--)

//! 2. 증감 연산자(++, --)
// : 피연산자를 1씩 증가 혹은 감소시킬 때 사용하는 연산자
// : 피연산자가 단 하나뿐인 단항 연산자
// : 연산 순서가 피연산자의 어느 쪽에 위치하는가에 따라 달라짐
// : 숫자에 직접 적용하여 출력할 수 X

//* 증감 연산자의 종류
// - 후위 연산자
// : x++ (변수 뒤에 연산자를 사용)
// : 해당 브라우저 식에서 바로 값을 변화 X
// : 그 다음 해당 변수를 불렀을 때 값을 계산

// - 전위 연산자
// : --x (변수 앞에 연산자를 사용);
// : 브라우저가 변수를 먼저 증가/감소 시키고 값을 반환

//! 3. 할당(대입) 연산자
// : 변수에 값을 할당하는 데 사용
// : 변수에 값을 대입할 때 사용하는 이항 연산자이며
// : 피연산자들의 결합 방향은 '오른쪽에서 왼쪽'
// : 연산의 순서 중요!

//* 할당(대입) 연산자의 종류
// 할당(=), +=, -=, *=, /=, %=

// 더하기 후 할당

// 빼기 후 할당

// 곱셈 후 할당

// 나누기 후 할당

//! 4. 비교 연산자
// : 피연산자 사이의 상대적인 크기를 판단하여, 그 결과를 참(true)과 거짓(false)을 반환
// : 비교 연산자는 모두 두 개의 피연산자를 가지는 이항 연산자
// : 피연산자들의 결합 방향은 '왼쪽에서 오른쪽'

// - 자바스크립트에서 비교 연산자는 피연산자의 타입에 따라 두 가지 기준으로 비교를 진행
// 1) 피연산자가 둘 다 숫자면, 해당 숫자를 서로 비교
// 2) 피연산자가 둘 다 문자열이면, 문자열의 첫 번째 문자부터 알파벳 순서대로 비교

//* 비교 연산자의 종류
// 동등(==), 부등(!=)
// > 값이 동일한지 테스트 (데이터 유형을 고려하지 X)

// 일치(===), 불일치(!==)
// > 엄격한 값과 값의 데이터 유형의 완전한 동일성을 모두 테스트

// 크다(>), 작다(<), 크거나 같다(>=), 작거나 같다(<=)

//* '=='와 '==='의 차이
// : 동등 연산자는 두 값이 같은지 비교할 때 자동으로 타입 변환을 수행(내용만 비교)
// : 일치 연산자는 두 값이 같은지 비교할 때 타입 변환 수행X
//   >> 값과 타입이 모두 같을 때만 true를 반환
// - 부등 연산자(!=)와 불일치 연산자(!==)
//   : 각각 동등 연산자와 일치 연산자의 비교와 정확히 반대로 동작