import React from 'react'

/*

# 1. useMemo

- useMemo는 계산된 값을 메모이제이션
- 의존성 배열에 포함된 값이 변경될 때만 메모이제이션된 값을 재계산

? 컴포넌트가 렌더링될 때마다 동일한 계산을 반복하는 비용이 큰 경우에 유용
EX) 데이터 필터링

# 2. useCallback

- useCallback은 함수를 메모이제이션
- 함수가 의존하는 값이 변경되지 않는 한, 동일한 함수 인스턴스를 반환

? 2-1. 자식 컴포넌트에 콜백 함수를 props로 전달할 때 유용

>> 주로 자식 컴포넌트에 함수를 props로 전달할 때, 불필요한 리렌더링을 방지하기 위해 사용

? 2-2. 복잡한 이벤트 핸들러 저장

# useEffect

useEffect는 사이드 이펙트를 처리
: 컴포넌트가 렌더링된 이후에 실행되는 코드를 정의

: 의존성 배열을 통해 특정 상태나 props가 변경될 때만 실행되도록 제어

? EX) 데이터 페칭, 구독 설정, DOM 조작 등의 작업에 사용

*/
export default function 비교() {
  return (
    <div>비교</div>
  )
}
